version: '3'

services:
  ts-app:
    image: ts-app
    container_name: ts-app
    build: .
    environment:
      - APP_ENV=production
      - CONTAINER_ROLE=app
      - DB_HOST=ts-db
    volumes:
      - .:/var/www
    networks:
      - ts-app-network
    depends_on:
      - ts-db

  ts-app-scheduler:
    image: ts-app
    container_name: ts-app-scheduler
    depends_on:
      - ts-app
    volumes:
      - .:/var/www
    networks:
      - ts-app-network
    environment:
      - APP_ENV=production
      - CONTAINER_ROLE=scheduler
      - DB_HOST=ts-db

  ts-app-queue:
    image: ts-app
    container_name: ts-app-queue
    depends_on:
      - ts-app
    volumes:
      - .:/var/www
    networks:
      - ts-app-network
    environment:
      - APP_ENV=production
      - CONTAINER_ROLE=queue
      - DB_HOST=ts-db

  ts-nginx:
    build: .docker/nginx
    container_name: ts-nginx
    restart: always
    tty: true
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
    networks:
      - ts-app-network
    depends_on:
      - ts-app

  ts-db:
    build: .docker/mariadb
    container_name: ts-db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/dbdata:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=transacao-simplificada
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_USER=root
    networks:
      - ts-app-network

networks:
  ts-app-network:
    driver: bridge
